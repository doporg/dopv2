--- #---------------- Orderer0 Deployment ---------------
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: <ordererName>
  name: <ordererName>
  namespace: <NameSpace>
spec:
  selector:
    matchLabels:
      app: <ordererName>
  replicas: 1
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: <ordererName>
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 1
              podAffinityTerm:
                labelSelector:
                  matchExpressions:
                    - key: "app"
                      operator: In
                      values:
                        - <otherOrdererName>
                topologyKey: "kubernetes.io/hostname"
      containers:
        - args:
            - orderer
          env:
            - name: FABRIC_LOGGING_SPEC
              value: DEBUG
            - name: ORDERER_OPERATIONS_LISTENADDRESS
              value: 0.0.0.0:8443
            - name: ORDERER_METRICS_PROVIDER
              value: prometheus
            - name: ORDERER_GENERAL_GENESISFILE
              value: /var/hyperledger/orderer/genesis.block
            - name: ORDERER_GENERAL_GENESISMETHOD
              value: file
            - name: ORDERER_GENERAL_LISTENADDRESS
              value: 0.0.0.0
            - name: ORDERER_GENERAL_LOCALMSPDIR
              value: /var/hyperledger/orderer/msp
            - name: ORDERER_GENERAL_LOCALMSPID
              value: OrdererMSP
            - name: ORDERER_GENERAL_TLS_CERTIFICATE
              value: /var/hyperledger/orderer/tls/server.crt
            - name: ORDERER_GENERAL_TLS_ENABLED
              value: "true"
            - name: ORDERER_GENERAL_TLS_PRIVATEKEY
              value: /var/hyperledger/orderer/tls/server.key
            - name: ORDERER_GENERAL_TLS_ROOTCAS
              value: "[/var/hyperledger/orderer/tls/ca.crt]"
            - name: ORDERER_GENERAL_CLUSTER_CLIENTCERTIFICATE
              value: /var/hyperledger/orderer/tls/server.crt
            - name: ORDERER_GENERAL_CLUSTER_CLIENTPRIVATEKEY
              value: /var/hyperledger/orderer/tls/server.key
            - name: ORDERER_GENERAL_CLUSTER_ROOTCAS
              value: "[/var/hyperledger/orderer/tls/ca.crt]"
          image: hyperledger/fabric-orderer:amd64-2.1.0
          name: orderer
          ports:
            - containerPort: 7050
            - containerPort: 8443
          volumeMounts:
            - mountPath: /var/hyperledger/production
              name: <ordererName>-persistentdata
            - mountPath: /var/hyperledger/orderer/genesis.block
              name: <ordererName>-claim0
            - mountPath: /var/hyperledger/orderer/msp
              name: <ordererName>-claim1
            - mountPath: /var/hyperledger/orderer/tls
              name: <ordererName>-claim2
          workingDir: /opt/gopath/src/github.com/hyperledger/fabric
      restartPolicy: Always
      volumes:
        - name: <ordererName>-persistentdata
          hostPath:
            path: /home/<NameSpace>/storage/<ordererName>
            type: DirectoryOrCreate
        - name: <ordererName>-claim0
          hostPath:
            path: /mnt/nfsdata/fabric/<NameSpace>/channel-artifacts/genesis.block
        - name: <ordererName>-claim1
          hostPath:
            path: /mnt/nfsdata/fabric/<NameSpace>/crypto-config/ordererOrganizations/consortium/orderers/<ordererName>/msp
        - name: <ordererName>-claim2
          hostPath:
            path: /mnt/nfsdata/fabric/<NameSpace>/crypto-config/ordererOrganizations/consortium/orderers/<ordererName>/tls
